package com.example.starbuckscopyapp0804

import android.content.Intent
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.size
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.Button
import androidx.compose.material3.ButtonDefaults
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.painter.Painter
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.TextStyle
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.starbuckscopyapp0804.ui.theme.StarbucksCopyApp0804Theme

class CoffeInfoPage : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            StarbucksCopyApp0804Theme {
                val coffeeName = intent.getStringExtra("coffeeName") ?: ""
                val engName = intent.getStringExtra("EngName") ?: ""
                val price = intent.getStringExtra("Price") ?: ""
                //IntÎäî defaultÍ∞íÏùÑ ÎÑ£Ïñ¥ÏïºÎê®
                val imageResID = intent.getIntExtra("ImageID", 0)
                Tiriri(coffeeName, engName, price, imageResID)

            }
        }
    }
}

@Composable
fun NextPageTop() {
    val context = LocalContext.current
    Box() {
        Row(
            horizontalArrangement = Arrangement.SpaceBetween,
            verticalAlignment = Alignment.CenterVertically,
            modifier = Modifier.fillMaxWidth()
        ) {
            Button(
                onClick = {
                    val intent = Intent(context, MainActivity::class.java)
                    context.startActivity(intent)
                }, colors = ButtonDefaults.buttonColors(containerColor = Color.Transparent)
            ) {
                Text("<", color = Color.White, fontSize = 25.sp)
            }
            Button(
                onClick = {},
                colors = ButtonDefaults.buttonColors(containerColor = Color.Transparent)
            ) {
                Text("üì§", fontSize = 25.sp)
            }
        }

    }
}


@Composable
fun Tiriri(coffeename: String, engname: String, price: String, imageResId: Int) {
    val context = LocalContext.current
    val painter: Painter = painterResource(id = imageResId)
    val scrollState = rememberScrollState()
    val tmi = MoreInfo(engname)
    val tmi2 = OrderInfo(engname)

    StarbucksCopyApp0804Theme {
        Column(
            modifier = Modifier.verticalScroll(scrollState)
        ) {
            Box {
                Image(
                    painter = painter,
                    contentDescription = "",
                    modifier = Modifier
                        .fillMaxWidth()
                        .height(400.dp)
                )
                NextPageTop()
            }
            Column {
                Box(modifier = Modifier.padding(50.dp)) {
                    Column {

                        Text(
                            text = coffeename,
                            fontSize = 25.sp,
                            style = TextStyle(fontWeight = FontWeight.Bold)
                        )

                        Text(text = engname, fontSize = 12.sp, color = Color.LightGray)

                        Spacer(modifier = Modifier.size(15.dp))

                        Text(text = tmi, fontSize = 13.sp, style = TextStyle(lineHeight = 15.sp))

                        Spacer(modifier = Modifier.size(15.dp))

                        Text(
                            text = price,
                            fontSize = 20.sp,
                            style = TextStyle(fontWeight = FontWeight.Bold)
                        )

                        Row(modifier = Modifier.fillMaxWidth()) {
                            Button(
                                onClick = { /*TODO*/ },
                                colors = ButtonDefaults.buttonColors(containerColor = Color.Red),
                                shape = RoundedCornerShape(
                                    topStart = 30.dp,
                                    topEnd = 0.dp,
                                    bottomStart = 30.dp,
                                    bottomEnd = 0.dp
                                ),
                                modifier = Modifier.fillMaxWidth(0.5f)
                            ) {
                                Text("Hot")
                            }
                            Button(
                                onClick = { /*TODO*/ },
                                colors = ButtonDefaults.buttonColors(containerColor = Color.Blue),
                                shape = RoundedCornerShape(
                                    topStart = 0.dp,
                                    topEnd = 30.dp,
                                    bottomStart = 0.dp,
                                    bottomEnd = 30.dp
                                ),
                                modifier = Modifier.fillMaxWidth()
                            ) {
                                Text("Iced")
                            }
                        }

                        Box(
                            modifier = Modifier
                                .padding(5.dp)
                                .background(Color.LightGray)
                                .fillMaxWidth()
                        ) {
                            Text(text = tmi2, fontSize = 13.sp)
                        }

                        Button(
                            onClick = {
                                val intent = Intent(context, OrderDonePage::class.java)
                                context.startActivity(intent)
                            },
                            colors = ButtonDefaults.buttonColors(containerColor = Color(0xFF009900)),
                            modifier = Modifier.fillMaxWidth()
                        ) {
                            Text(text = "Ï£ºÎ¨∏ÌïòÍ∏∞")
                        }

                    }
                }
            }
        }
    }
}


@Composable
private fun MoreInfo(engname: String): String {
    var tmi = ""

    when (engname) {
        "Iced Caffe Americano" -> tmi =
            "ÏßÑÌïú ÏóêÏä§ÌîÑÎ†àÏÜåÏóê ÏãúÏõêÌïú Ï†ïÏàòÎ¨ºÍ≥º ÏñºÏùåÏùÑ ÎçîÌïòÏó¨ Ïä§ÌÉÄÎ≤ÖÏä§Ïùò ÍπîÎÅîÌïòÍ≥† Í∞ïÎ†¨Ìïú ÏóêÏä§ÌîÑÎ†àÏÜåÎ•º Í∞ÄÏû• Î∂ÄÎìúÎüΩÍ≥† ÏãúÏõêÌïòÍ≤å Ï¶êÍ∏∏ Ïàò ÏûàÎäî Ïª§Ìîº"

        "Iced Caffe Latte" -> tmi = "ÌíçÎ∂ÄÌïòÍ≥† ÏßÑÌïú ÎÜçÎèÑÏùò ÏóêÏä§ÌîÑÎ†àÏÜåÍ∞Ä ÏãúÏõêÌïú Ïö∞Ïú†ÏôÄ ÏñºÏùåÏùÑ ÎßåÎÇò Í≥†ÏÜåÌï®Í≥º ÏãúÏõêÌï®ÏùÑ Ï¶êÍ∏∏ Ïàò ÏûàÎäî ÎåÄÌëúÏ†ÅÏù∏ Ïª§Ìîº ÎùºÎñº"
        "Sea Salt Caramel Cold Brew" -> tmi = "Íµ¨Î¶Ñ Ï≤òÎüº Î∂ÄÎìúÎü¨Ïö¥ Ïî®ÏÜîÌä∏ ÌèºÍ≥º Î≤àÌä∏ Ïπ¥ÎùºÎ©úÏùò\n" +
                "Ï§ëÎèÖÏÑ± Í∞ïÌïú Îã®Ïß†Îã®Ïß† Ï°∞Ìï©Ïùò ÏΩúÎìú Î∏åÎ£®\n" +
                "ÌïúÎ≤à ÎßõÎ≥¥Î©¥ ÏûêÍæ∏ ÏÉùÍ∞ÅÎÇòÎäî Îß§Î†•Ï†ÅÏù∏ ÏùåÎ£å"

        "Iced Grapefruit Honey Black Tea" -> tmi =
            "ÏÉàÏΩ§Ìïú ÏûêÎ™ΩÍ≥º Îã¨ÏΩ§Ìïú ÍøÄÏù¥ ÍπäÍ≥† Í∑∏ÏúΩÌïú ÌíçÎØ∏Ïùò Ïä§ÌÉÄÎ≤ÖÏä§ Ìã∞Î∞îÎÇò Î∏îÎûô Ìã∞Ïùò Ï°∞Ìôî.\n" +
                    "ÌïúÏ†ïÎêú Í∏∞Í∞Ñ ÎèôÏïà ÌåêÎß§ÌïòÎäî Ìä∏Î†åÌÉÄ ÏÇ¨Ïù¥Ï¶àÎ°ú Ï¶êÍ≤® Î≥¥ÏÑ∏Ïöî."

        "Cold Brew" -> tmi = "Ïä§ÌÉÄÎ≤ÖÏä§ Î∞îÎ¶¨Ïä§ÌÉÄÏùò Ï†ïÏÑ±ÏúºÎ°ú ÌÉÑÏÉùÌïú ÏΩúÎìú Î∏åÎ£®!\n" +
                "ÏΩúÎìú Î∏åÎ£® Ï†ÑÏö© ÏõêÎëêÎ•º Ï∞®Í∞ÄÏö¥ Î¨ºÎ°ú Ï∂îÏ∂úÌïòÏó¨ ÌïúÏ†ïÎêú ÏñëÎßå Ï†úÍ≥µÎê©ÎãàÎã§.\n" +
                "Ïã§ÌÅ¨Í∞ôÏù¥ Î∂ÄÎìúÎüΩÍ≥† Í∑∏ÏúΩÌïú Ï¥àÏΩúÎ¶ø ÌíçÎØ∏Ïùò ÏΩúÎìú Î∏åÎ£®Î•º ÎßåÎÇòÎ≥¥ÏÑ∏Ïöî!\n" +
                "ÌïúÏ†ïÎêú Í∏∞Í∞Ñ ÎèôÏïà ÌåêÎß§ÌïòÎäî Ìä∏Î†åÌÉÄ ÏÇ¨Ïù¥Ï¶àÎ°ú Ï¶êÍ≤® Î≥¥ÏÑ∏Ïöî."

        "Caffe Mocha" -> tmi =
            "ÏßÑÌïú Ï¥àÏΩúÎ¶ø Î™®Ïπ¥ ÏãúÎüΩÍ≥º ÌíçÎ∂ÄÌïú ÏóêÏä§ÌîÑÎ†àÏÜåÎ•º Ïä§ÌåÄ Î∞ÄÌÅ¨ÏôÄ ÏÑûÏñ¥ ÌúòÌïëÌÅ¨Î¶ºÏúºÎ°ú ÎßàÎ¨¥Î¶¨Ìïú ÏùåÎ£åÎ°ú ÏßÑÌïú ÏóêÏä§ÌîÑÎ†àÏÜåÏôÄ Ï¥àÏΩúÎ¶ø ÎßõÏù¥ Ïñ¥Ïö∞Îü¨ÏßÑ Ïª§Ìîº"

        "Lavender Cafe Breve" -> tmi =
            "ÏßÑÌïú Î¶¨Ï†ÄÎ∏å ÏóêÏä§ÌîÑÎ†àÏÜå ÏÉ∑Í≥º ÏùÄÏùÄÌïú ÎùºÎ≤§ÎçîÌñ•Ïù¥ Í≥†Í∏âÏä§ÎüΩÍ≤å Ïñ¥Ïö∞Îü¨ÏßÑ Î∂ÄÎìúÎüΩÍ≥† ÏÑ∏Î†®Îêú ÌíçÎØ∏Ïùò ÎùºÎ≤§Îçî Ïπ¥Ìéò Î∏åÎ†àÎ≤†"

        "The Green Mugwart Cream Latte" -> tmi = "ÏùÄÏùÄÌïú Ïë•Í≥º Í≥°Î¨ºÏóê Î∏îÎ°†Îìú ÏÉ∑Ïù¥ Ïñ¥Ïö∞Îü¨Ï†∏ Í≥†ÏÜåÌïòÍ≥† Î∂ÄÎìúÎü¨Ïö¥ ÎùºÎñº\n" +
                "Îã¨ÏΩ§Ìïú Ïë• ÌèºÏù¥ Ïò¨ÎùºÍ∞Ä Î∂ÄÎìúÎüΩÍ≤å Ï¶êÍ∏∞Îäî ÏïÑÏù∏ÏäàÌéòÎÑà ÏùåÎ£å\n" +
                "*ÎçîÎ∂ÅÌïúÏÇ∞,ÎçîÏñëÌèâDTR,ÎçîÎ∂ÅÌïúÍ∞ïR,Í≤ΩÎèô1960,ÎåÄÍµ¨Ï¢ÖÎ°úÍ≥†ÌÉù Îß§Ïû•ÏóêÏÑúÎßå ÌåêÎß§ÌïòÎäî ÏùåÎ£åÏûÖÎãàÎã§."
    }
    return tmi
}

@Composable
private fun OrderInfo(engname: String): String {
    var tmi2 = ""

    when (engname) {
        "Iced Caffe Americano" -> tmi2 = "Ïó¨Í∏∞ Î≠êÎì§Ïñ¥Í∞ÄÎäîÏßÄ ÏßÑÏßúÎ™®Î£∏\n" + "\n" + "\n" + "\n"

        "Iced Caffe Latte" -> tmi2 = "Ïó¨Í∏∞ Î≠êÎì§Ïñ¥Í∞ÄÎäîÏßÄ ÏßÑÏßúÎ™®Î£∏2\n" + "\n" + "\n" + "\n"

        "Sea Salt Caramel Cold Brew" -> tmi2 = "Ïó¨Í∏∞ Î≠êÎì§Ïñ¥Í∞ÄÎäîÏßÄ ÏßÑÏßúÎ™®Î£∏3\n" + "\n" + "\n" + "\n"

        "Iced Grapefruit Honey Black Tea" -> tmi2 = "Ïó¨Í∏∞ Î≠êÎì§Ïñ¥Í∞ÄÎäîÏßÄ ÏßÑÏßúÎ™®Î£∏4\n" + "\n" + "\n" + "\n"

        "Cold Brew" -> tmi2 = "ÏïåÎ†àÎ•¥Í∏∞ Ïú†Î∞úÏöîÏù∏ : Ïö∞Ïú†\n" + "\n" + "\n" + "\n"

        "Caffe Mocha" -> tmi2 = "ÏïåÎ†àÎ•¥Í∏∞ Ïú†Î∞úÏöîÏù∏ : Ïö∞Ïú†\n" + "\n" + "\n" + "\n"

        "Lavender Cafe Breve" -> tmi2 = "ÏïåÎ†àÎ•¥Í∏∞ Ïú†Î∞úÏöîÏù∏ : Ïö∞Ïú†\n" + "\n" + "\n" + "\n"

        "The Green Mugwart Cream Latte" -> tmi2 = "ÏïåÎ†àÎ•¥Í∏∞ Ïú†Î∞úÏöîÏù∏ : ÎåÄÎëê / Ïö∞Ïú†\n" + "\n" + "\n" + "\n"
    }
    return tmi2
}


